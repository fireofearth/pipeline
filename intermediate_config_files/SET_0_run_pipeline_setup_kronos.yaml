__PIPELINE_INFO__: 
    date_last_updated: 
    name: 'Pipeline'
    data_type: 
    author: 'cchen'
    Kronos_version: '2.3.0'
    host_cluster: 
    version: '0.00.1'
    input_type: 
    date_created: '2019-05-07'
    output_type: 
__GENERAL__: 
    docker: 'docker'
__SHARED__: 
    anno_loc: 
    patch_loc: 
    img_loc: 
__SAMPLES__: 
    # sample_id:
    #    param1: value1
    #    param2: value2

    SET_0: 
        task_a_config: '/home/molinux01/mnursey/example_pipeline/downsample_config.json'
TASK_CREATE_GROUPS: 
    reserved: 
        # do not change this section.
        seed_version: '0.00.1'
        component_version: '0.00.1'
        component_name: 'kronos_component_docker'
    run: 
        interval_file: 
        requirements: 
            docker: 
        boilerplate: 
        use_cluster: False
        num_cpus: 1
        parallel_run: False
        merge: True
        add_breakpoint: False
        memory: '128G'
        forced_dependencies: ['TASK_DOWNSAMPLE_DATA']
        env_vars: 
        parallel_params: []
    component: 
        input_files: 
            config_file_location: '/home/molinux01/cchen/ml/pipeline/create_groups_config.json'
            docker_image: 'cchen/create_groups'
        parameters: 
        output_files: 
TASK_CREATE_TRAINING_FILES: 
    reserved: 
        # do not change this section.
        seed_version: '0.00.1'
        component_version: '0.00.1'
        component_name: 'kronos_component_docker'
    run: 
        interval_file: 
        requirements: 
            docker: 
        boilerplate: 
        use_cluster: False
        num_cpus: 1
        parallel_run: False
        merge: True
        add_breakpoint: False
        memory: '128G'
        forced_dependencies: ['TASK_CREATE_GROUPS']
        env_vars: 
        parallel_params: []
    component: 
        input_files: 
            testing_chunks: '6_7'
            chunk_file_location: '/home/molinux01/cchen/ml/test_data_chunks.txt'
            training_chunks: '0_1_2_3_4'
            output_location: '/home/molinux01/cchen/ml/test_data_training_chunks.txt'
            seed: 1
            validation_chunks: '5'
            docker_image: 'cchen/create_training_files'
            number_of_patches: '1000_1000_1000'
        parameters: 
        output_files: 
TASK_DIVIDE_WORK: 
    reserved: 
        # do not change this section.
        seed_version: '0.00.1'
        component_version: '0.00.1'
        component_name: 'kronos_component_docker'
    run: 
        interval_file: 
        requirements: 
            docker: 
        boilerplate: 
        use_cluster: False
        num_cpus: 1
        parallel_run: False
        merge: True
        add_breakpoint: False
        memory: '128G'
        forced_dependencies: ['TASK_SORT_PATCHES_BY_LABEL']
        env_vars: 
        parallel_params: []
    component: 
        input_files: 
            work_location: '/home/molinux01/cchen/ml/work/sorted'
            'N': 3
            docker_image: 'cchen/divide_work'
            data_location: '/home/molinux01/cchen/ml/test_data_sorted'
        parameters: 
        output_files: 
TASK_DOWNSAMPLE_DATA: 
    reserved: 
        # do not change this section.
        seed_version: '0.00.1'
        component_version: '0.00.1'
        component_name: 'kronos_component_docker'
    run: 
        interval_file: 
        requirements: 
            docker: 
        boilerplate: 
        use_cluster: False
        num_cpus: 1
        parallel_run: False
        merge: True
        add_breakpoint: False
        memory: '128G'
        forced_dependencies: ['TASK_DIVIDE_WORK']
        env_vars: 
        parallel_params: []
    component: 
        input_files: 
            config_file_location: '/home/molinux01/cchen/ml/pipeline/downsample_data_config.json'
            docker_image: 'cchen/downsample_data'
        parameters: 
        output_files: 
TASK_SORT_PATCHES_BY_LABEL: 
    reserved: 
        # do not change this section.
        seed_version: '0.00.1'
        component_version: '0.00.1'
        component_name: 'kronos_component_docker'
    run: 
        interval_file: 
        requirements: 
            docker: 
        boilerplate: 
        use_cluster: False
        num_cpus: 1
        parallel_run: False
        merge: True
        add_breakpoint: False
        memory: '128G'
        forced_dependencies: []
        env_vars: 
        parallel_params: []
    component: 
        input_files: 
            sorted_location: '/home/molinux01/cchen/ml/test_data_sorted'
            labels_file_location: '/home/molinux01/cchen/ml/test_data_labels_file.txt'
            patch_location: '/home/molinux01/cchen/ml/test_data'
            docker_image: 'cchen/sort_patches_by_label'
        parameters: 
        output_files: 
